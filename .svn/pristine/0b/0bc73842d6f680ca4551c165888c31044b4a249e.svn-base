<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.8.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="bCryptPasswordEncoder"  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailsService"   class="kr.or.ddit.security.CustomUserDetailsService"/>
	<bean id="customAccessDeniedHandler"   class="kr.or.ddit.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccessHandler" class="kr.or.ddit.security.CustomLoginSuccessHandler"/>
	
	<security:http>
		<!-- 요거이 없으면 추측해야 해서 힘듬  -->
		<security:access-denied-handler ref="customAccessDeniedHandler"/>
		<security:intercept-url pattern="/minwoo/**" access="hasRole('ROLE_ADMIN')" />
		<!-- 사용자가 입력한 URL로 그대로 가게 둘때는 꼭 필요하진 않지만
			 로그인 성공후에 특정 URL로 보내고 싶을 때는 success-handler가 필용!
		-->
		<security:form-login  authentication-success-handler-ref="customLoginSuccessHandler"  login-page="/common/login" 
			authentication-failure-forward-url="/common/loginfFailed"/>
		<security:logout logout-url="/logout" />
		
		
      <!-- 
      1. 접근 거부 처리(시큐리티  제공)
      1) 선제조건 : 계정 / 비밀번호가 맞아야 함 => 로그인 가능
      2) 들어가려는 URL에 대한 권한이 없어야 함
      	/notice/register 요청에 member / java로 로그인한 경우[ROLE_MEMBER]
      -->
      <security:access-denied-handler error-page="/security/accessError"/>
      
 
      
	</security:http>
	



	<security:authentication-manager id="authMgr">
		<security:authentication-provider  user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bCryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>