<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<default-servlet-handler/>
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	 
<!-- 	<context:component-scan base-package="spring.service" /> -->
	

	
	
	<!-- 메일링 -->
<!-- 	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="defaultEncoding" value="utf-8"/>
		<beans:property name="username" value="새로만든 구글계정 아이디"/>
		<beans:property name="password" value="앱키 비밀번호"/>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop> 2단계본인인증을 했으니 보안적으로 true라고 준다
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean> -->
	
	
	<!-- Tiles 설정 시작 -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:config/spring/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- UrlBasedViewResolver tilesViewResolver = new UrlBasedViewResolver() -->
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- Tiles 설정 끝 -->
	

	<context:component-scan base-package="kr.or.ddit" />
    <!-- component-scan 뒤에 넣어야 낸중에 autowired 쓸때 편하당 -->
	<beans:import resource="websocket-context.xml"/>
	
	<!-- 파일업로드 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      
      <beans:property name="maxUploadSize" value="5242880" />
      <beans:property name="defaultEncoding" value="utf-8" />
   
   </beans:bean>
	
	
</beans:beans>
