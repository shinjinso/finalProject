package kr.or.ddit.work.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;


import kr.or.ddit.common.service.CommonService;
import kr.or.ddit.common.vo.EmpVO;
import kr.or.ddit.vo.WkApVO;
import kr.or.ddit.work.service.WkApService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/lhh")
@Controller
public class WorkController {

	@Autowired
	WkApService wkapService;
	@Autowired
	private CommonService service;
	
	
	@GetMapping("/work")
	public String work(Model model, Principal principal) {
		//회원 한명조회
		String empNo = principal.getName();
		
		WkApVO vo = new WkApVO();
		vo.setWaAper(empNo);
		
		EmpVO empVo = service.SelectEmp(empNo);
		List<WkApVO> listWkap = wkapService.workOneSelect();
		
		model.addAttribute("empVO",empVo);
		model.addAttribute("list",listWkap);
		
		
		return "work/work";
	}
	
	@GetMapping("/member")
	public String memberWork() {
		return "work/MemberWork";
	}
	
	@GetMapping("/detailWork")
	public String detailWork(Model model, Principal principal) {
		//회원 한명조회
		String empNo = principal.getName();
		
		WkApVO vo = new WkApVO();
		vo.setWaAper(empNo);
		
		EmpVO empVo = service.SelectEmp(empNo);
		List<WkApVO> listWkap = wkapService.workOneSelect();
		
		model.addAttribute("empVO",empVo);
		model.addAttribute("list",listWkap);
		
		
		return "work/detailWork";
	}
	
	@ResponseBody
	@GetMapping(value="/test",produces = "application/json;charset=utf-8")
	public List<WkApVO> test() {
		List<WkApVO> list = wkapService.workSelect();
		log.info(list.toString());
		return list;
	}
	
	@ResponseBody
	@PostMapping(value="/test",produces = "application/json;charset=utf-8")
	public String workInsert(@RequestBody WkApVO wkapVO) {
		log.debug("찍히나 ? ", wkapVO);
		return Integer.toString(wkapService.workInsert(wkapVO));
	}
	
	@ResponseBody
	@PutMapping(value="/test",produces = "application/json;charset=utf-8")
	public String workUpdate(@RequestBody WkApVO wkapVO) {
		return Integer.toString(wkapService.workUpdate(wkapVO));
	}
	
	@ResponseBody
	@DeleteMapping(value="/test/{waNo}",produces = "application/json;charset=utf-8")
	public String workDelete(@PathVariable int waNo) {
		WkApVO wkapVO = new WkApVO();
		wkapVO.setWaNo(waNo);
		return Integer.toString(wkapService.workDelete(wkapVO));
	}
	
	@ResponseBody
	@GetMapping(value="/test/{waAper}",produces = "application/json;charset=utf-8")
	public List<WkApVO> getEmpSelect(@PathVariable String waAper) {
		List<WkApVO> list = wkapService.getEmpSelect(waAper);
		return list;
	}
	
	@ResponseBody
	@GetMapping(value="/workOneSelect",produces = "application/json;charset=utf-8")
	public List<WkApVO> workOneSelect() {
		List<WkApVO> list = wkapService.workOneSelect();
		return list;
	}
	
	@ResponseBody
	@GetMapping(value="/countEMP",produces = "application/json;charset=utf-8")
	public List<WkApVO> countEMP() {
		List<WkApVO> list = wkapService.countEMP();
		return list;
	}
	
	//1개 조회
	@ResponseBody
	@GetMapping(value="/get/{waAper}",produces = "application/json;charset=utf-8")
	public WkApVO OneSelect(@PathVariable String waAper) {
		WkApVO wkapVO = new WkApVO();
		wkapVO.setWaAper(waAper);
		
		return wkapService.OneSelect(wkapVO);
	}

	
}
