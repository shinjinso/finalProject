package kr.or.ddit.approval.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.approval.service.ApprovalService;
import kr.or.ddit.approval.vo.ApboxVO;
import kr.or.ddit.approval.vo.DocKindVO;
import kr.or.ddit.approval.vo.FixturesVO;
import kr.or.ddit.common.service.CommonService;
import kr.or.ddit.common.vo.DeptVO;
import kr.or.ddit.common.vo.EmpVO;
import kr.or.ddit.common.vo.FileInfoVO;
import lombok.extern.slf4j.Slf4j;




@Slf4j
@Controller
@RequestMapping("/approval")
public class ApprovalController {
	
	@Autowired
	private ApprovalService approvalService;
	@Autowired
	private CommonService service;
	
	/**
	 * 결제 화면으로 가기 
	 * @return
	 */
	@GetMapping("/workflow")
	public String patment() {
		return "approval/workflow";
	}
	
	/**
	 * 비품신청양식 페이지
	 * @return
	 */
	@GetMapping("/FurnitureApplicationForm")
	public String FurnitureApplicationForm() {
		return "approval/FurnitureApplicationForm";
	}
	
	
	/**
	 * 비품신청 INSERT
	 * @param data
	 * @return
	 */
	@ResponseBody
	@PostMapping("/fixApp")
	public String fixApp(@RequestBody Map<String, Object> data ) {
		
		log.info("approval -> data " + data);
		log.info("approval -> FixturesList " + data.get("FixturesList"));
		log.info("approval -> ApboxList " + data.get("ApboxList"));
		
		List<FixturesVO> fixList = (List<FixturesVO>) data.get("FixturesList");
		List<ApboxVO> apboxList = (List<ApboxVO>) data.get("ApboxList");
		
		log.info("approval -> fixList " + fixList);
		log.info("approval -> apboxList " + apboxList);
		
		
		return "success";
	}
	
	
	/**
	 * 문서양식 선택
	 * @return
	 */
	@ResponseBody
	@GetMapping("/writeWork/{docKind}")
	public DocKindVO writeWork(@PathVariable String docKind) {
		log.info(docKind);
		
		DocKindVO vo =  approvalService.selectDocKind(docKind);
		log.info("writeWork-> VO : " + vo);
		
		return vo;
	}
	
	
	/**
	 * 조직도 출력 
	 * @return
	 */
	@ResponseBody
	@GetMapping("/organizationChart")
	public Map<String,List<DeptVO>> organizationChart(){
		Map<String,List<DeptVO>> map = new HashMap();
		
		List<DeptVO> one = approvalService.organizationChartOne();
		List<DeptVO> two = approvalService.organizationChartTwo();
		
		map.put("one", one);
		map.put("two", two);
		
		log.info("이것은 One입니다" +one);
		log.info("이것은 Two입니다" +two);
		
		return map;
	}
	
	
	/**
	 * 선택한 사원 1명 조회하기
	 * @param keyword
	 * @return
	 */
	@ResponseBody
	@GetMapping("/selectEmp")
	public EmpVO selectEmp(@RequestParam String keyword) {
		log.info("CommonController->keyword : " + keyword);
		
		String EmpNo = keyword;
		log.info("CommonController->EmpNo : " + EmpNo);
		
		EmpVO vo = service.SelectEmp(EmpNo);
		List<FileInfoVO> myFileList = service.fileSelect(EmpNo);
		vo.setFileList(myFileList);
		log.info("CommonController->vo : " + vo);
		
		return vo;
	}
		

	

	
	
	
}
