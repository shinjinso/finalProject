package kr.or.ddit.common.controller;

import java.io.File;
import java.security.Principal;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.common.service.CommonService;
import kr.or.ddit.common.vo.AccaVO;
import kr.or.ddit.common.vo.CnthxVO;
import kr.or.ddit.common.vo.EmpVO;
import kr.or.ddit.common.vo.FileInfoVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/common")
public class CommonController {
	
	
	
	@Autowired
	private CommonService service;
	
	/**
	 * 웹소켓 테스트
	 * @return
	 */
	@GetMapping("/chat")
	public String chatChat() {
		return "/common/myChat";
	}
	
	/**
	 * 로그인 화면으로 가기
	 * @return
	 */
	@GetMapping("/login")
	public String login() {
		return "/common/login";
	}
	
	/**
	 * 홈피드 화면으로 가기
	 * @return
	 */
	@GetMapping("/home")
	public String home() {
		return "common/home";
	}
	
	/**
	 * AJAX로 검색결과 받기
	 * @param keyword
	 * @return
	 */
	@ResponseBody
	@GetMapping("/suchEmp")
	public List<EmpVO> suchEmp(@RequestParam String keyword){
		log.info("CommonController->keyword : " + keyword);
		List<EmpVO> list = service.suchEmp(keyword);
		log.info("CommonController->list : " + list);
		return list;
	}
	
	/**
	 * 마이페이지로 가기(사이드바에서 내정보 클릭시 이동)
	 * @return
	 */
	@GetMapping("/myPage")
	public String myPage(Principal principal,Model model) {
		String EmpNo = principal.getName();
		EmpVO vo = service.SelectEmp(EmpNo);
		List<FileInfoVO> myFileList = service.fileSelect(EmpNo);
		vo.setFileList(myFileList);
		model.addAttribute("vo",vo);
		return "common/myPage";
	}
	
	/**
	 * 사원 1명 조회하기
	 * @param principal
	 * @return
	 */
	@ResponseBody
	@GetMapping("/selectEmp")
	public EmpVO selectEmp(Principal principal) {
		String EmpNo = principal.getName();
		log.info("CommonController->EmpNo : " + EmpNo);
		EmpVO vo = service.SelectEmp(EmpNo);
		List<FileInfoVO> myFileList = service.fileSelect(EmpNo);
		vo.setFileList(myFileList);
		log.info("CommonController->vo : " + vo);
		
		return vo;
	}
	
	/**
	 * 내 계약정보
	 * @param principal
	 * @return
	 */
	@ResponseBody
	@GetMapping("/myCnthx")
	public List<CnthxVO> myCnthx(Principal principal){
		String EmpNo = principal.getName();
		log.info("CommonController->EmpNo : " + EmpNo);
		
		List<CnthxVO> list = service.myCnthx(EmpNo);
		log.info("CommonController->list : " + list);
		
		return list;
	}
	
	/**
	 * 내 학력정보
	 * @param principal
	 * @return
	 */
	@ResponseBody
	@GetMapping("/mtAcca")
	public AccaVO myAcca(Principal principal) {
		String EmpNo = principal.getName();
		log.info("CommonController->EmpNo : " + EmpNo);
		AccaVO vo = service.myAcca(EmpNo);
		log.info("CommonController->vo : " + vo);
		
		return vo;
	}
	
	
	/**
	 * 파일 미리보기
	 * @param file
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping(value ="/preview", produces ="application/json;charset=utf-8" )
	public String updateFile(MultipartFile file) throws Exception {
		log.info("updateFile->fileName : " + file.getOriginalFilename());
		log.info("updateFile->size : " + file.getSize());
		
		//DB에 저장할 파일경로
		String savePath = "d:/insightFile/"+ file.getOriginalFilename();
		file.transferTo(new File(savePath));
		
		//실제 웹 물리적 경로
		String webURL = "/insightFile/" + file.getOriginalFilename();
		//forwarding(jsp파일경로?)(x)
		//redirect(x)
		//데이터(O)
		return webURL;
	}
	
	
	/**
	 * 내 이미지 update(파일 업로드)
	 * @param file
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping(value = "/fileUpdate", produces = "application/json;charset=utf-8")
	public String fileUpdate(Principal principal, MultipartFile file) throws Exception {
		UUID uuid = UUID.randomUUID();
		String originFileName = file.getOriginalFilename();
		String uploadFileNmae = uuid.toString() + "_" + originFileName; 
		long fileSize = file.getSize();
		String EmpNo = principal.getName();
		String saveCateNo = "myimg"; 
		
		String savePath = "d:/insightFile/myimg/"+uploadFileNmae;
		
		FileInfoVO fileInfoVO = new FileInfoVO();
		fileInfoVO.setOrfiName(originFileName);
		fileInfoVO.setSvfiName("/insightFile/myimg/"+uploadFileNmae);
		fileInfoVO.setFileSize(fileSize);
		fileInfoVO.setFileUdter(EmpNo);
		fileInfoVO.setFileRoot(savePath);
		fileInfoVO.setFileSetting(saveCateNo);
		int result = service.fileInsert(fileInfoVO);
		if(result > 0) {
			file.transferTo(new File(savePath));
		}
		
		String webURL = "/insightFile/myimg/" + uploadFileNmae;
		return webURL;
	}
	
//    @PostMapping("/mymyPage")
//    @ResponseBody
//    public EmpVO getData(@RequestParam("id") Long id,EmpVO empVO) {
//        // id를 기반으로 데이터 검색
//    	EmpVO data = CommonService.SelectEmp(String id);
//        return data;
//    }
	
	
}
