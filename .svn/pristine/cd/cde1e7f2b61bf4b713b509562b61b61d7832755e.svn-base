<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>근무</title>
<script>
// 업데이트 시간확인
console.log("43분");

</script>
<style>
    body {
        margin: 0;
        padding: 0;
    }

    body,
    html {
        height: 100%;
    }
  h1,h2,h3,h4,h5 {
    display: inline;
    white-space: nowrap;
    text-decoration: none;
  }
a:link {
	color: black;
	text-decoration: none;
}

a:visited {
	color: black;
	text-decoration: none;
}

a {
	text-decoration-line: none;
}
/* .mbsc-calendar-wrapper { */
/*         display: none;  */
/* } */

#drF {
	color : gray;
}
#drFd {
	color : gray;
	text-weight : bold;
	font-size : small;
}
.event-color-c {
    display: flex;
    margin: 16px;
    align-items: center;
    cursor: pointer;
}

.event-color-label {
    flex: 1 0 auto;
}

.event-color {
    width: 30px;
    height: 30px;
    border-radius: 15px;
    margin-right: 10px;
    margin-left: 240px;
   background: #5ac8fa;
}

.crud-color-row {
    display: flex;
    justify-content: center;
    margin: 5px;
}

.crud-color-c {
    padding: 3px;
    margin: 2px;
}

.crud-color {
    position: relative;
    min-width: 46px;
    min-height: 46px;
    margin: 2px;
    cursor: pointer;
    border-radius: 23px;
   background: #5ac8fa;
}

.crud-color-c.selected,
.crud-color-c:hover {
    box-shadow: inset 0 0 0 3px #007bff;
    border-radius: 48px;
}

.crud-color:before {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -10px;
    margin-left: -10px;
    color: #f7f7f7;
    font-size: 20px;
    text-shadow: 0 0 3px #000;
    display: none;
}

.crud-color-c.selected .crud-color:before {
    display: block;
}

.mbsc-timeline-row-date {
   width: 192px;
   text-align: center;
}

.mbsc-ios.mbsc-segmented {
   display: none !important;
}
.mbsc-ios.mbsc-timeline-row-date {
   display: flex;
   justify-content: center;
   align-items: center;
}
</style>
</head>
<body>
	<div id="myWrap">
	<div class="d-flex flex-row bd-highlight mb-3">
		<div class="myWork">
			<h1>내 근무</h1>
		</div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<div class="flex-fill">
		<a href="#">
			<h1 style="color: gray;">구성원 근무</h1>
		</a>
		</div>
		<div class="d-flex flex-row justify-content-end">
           	<button type="button" class="btn mb-2 btn-outline-secondary" data-toggle="modal" data-target="#varyModal" data-whatever="@mdo"><span class="fe fe-calendar fe-16 mr-2"></span>반복일정 등록</button>
     	</div>
     </div>
   <hr>
       </div>
	<div class="row">
		<div class="col-12 col-lg-12">
			<div class="card shadow mb-1">
				<div class="card-body">
					<h4>40시간</h4>
					<h5 style="color: gray;">/ 52시간</h5>
					<div class="dropdown d-inline">
					    <button class="btn btn-sm p-0 dropdown-toggle" type="button"
					        id="dropdownMenuButton" data-toggle="dropdown"
					        aria-haspopup="true" aria-expanded="false">
					        <span class="sr-only">우선순위 변경</span>
					    </button>
					    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
					        <div class="d-flex flex-column">
					            <div class="d-flex justify-content-between">
					                <div class="p-2 dropdown-item text-success">✔ 필수</div>
					                <div class="d-flex dropdown-item justify-content-end" style="font-weight:bold;color:black;">40시간 / 40시간</div>
					            </div>
					            <div class="d-flex justify-content-between">
					                <div class="p-2 dropdown-item justify-content-start" id="drF">기본</div>
					                <div class="d-flex dropdown-item justify-content-end" id="drF">36시간</div>
					            </div>
					            <div class="d-flex justify-content-between">
					                <div class="p-2 dropdown-item" id="drF">연차</div>
					                <div class="d-flex dropdown-item justify-content-end" id="drF">4시간</div>
					            </div>
					            <span style="color:gray;">　─────────────────────── </span>
					            <div class="d-flex justify-content-between">
					                <div class="p-2 dropdown-item text-danger">🔴 초과</div>
					                <div class="d-flex dropdown-item justify-content-end" style="font-weight:bold;color:black;">2시간 / 12시간</div>
					            </div>
					            <div class="d-flex justify-content-between">
					                <div class="p-2 dropdown-item" id="drF">연장</div>
					                <div class="d-flex dropdown-item justify-content-end" id="drF">2시간</div>
					            </div>
					            <div class="d-flex justify-content-between">
					                <div class="p-2 dropdown-item" id="drF">야간</div>
					                <div class="d-flex dropdown-item justify-content-end" id="drF">0시간</div>
					            </div>
								<p class="p-2 dropdown-item mt-2" id="drFd">◼ 휴가는 근무 시간에 포함되지 않기 때문에, 휴가를 사용한<br> 4시간 만큼 추가로 근무가 가능해요</p>
					        </div>
					    </div>
					</div>
				</div>
				<!-- .card-body -->
			</div>
			<!-- .card -->
		</div>
		<!-- .col-md-->
	</div>
	<!-- .row -->
	
	<!-- 반복일정 등록 모달 -->
	<div class="modal fade" id="varyModal" tabindex="-1" role="dialog"
		aria-labelledby="varyModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="varyModalLabel" style="text-align: center;">반복 일정 등록</h5>
					<button type="button" class="close" data-dismiss="modal"
						aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<form>
						<div class="form-group col-md-12">
							<label for="multi-select2" class="col-form-label" style="font-weight:bold;">반복 기간</label>
		                          <select class="form-control select2" id="simple-select2">
		                              <option value="1">1주</option>
		                              <option value="2">2주</option>
		                              <option value="3">3주</option>
		                              <option value="4">한달</option>
		                          </select>
		                        </div> <!-- form-group -->
						<div class="form-group col-md-12">
							<label for="message-text" class="col-form-label" style="font-weight:bold;">반복 요일</label>
	                          <select class="form-control select2-multi" id="multi-select2">
	                              <option value="월">월</option>
	                              <option value="화">화</option>
	                              <option value="수">수</option>
	                              <option value="목">목</option>
	                              <option value="금">금</option>
	                              <option value="토">토</option>
	                              <option value="일">일</option>
	                          </select>
                        </div>
						<div class="form-group col-md-12">
							<label for="message-text" class="col-form-label" style="font-weight:bold;">일정 입력 <span class="badge badge-pill badge-success">8시간</span></label>
                        </div>
                        <button type="button" class="btn mb-2 btn-light btn-lg btn-block" style="font-weight:normal;color:gray;">새 일정 추가하기</button>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn mb-2 btn-success btn-lg btn-block" style="font-weight:bold; color:white;">반복 일정 등록하기</button>
				</div>
			</div>
		</div>
	</div>

	<!-- 타임라인 API -->
	<div mbsc-page class="demo-create-read-update-delete-CRUD">
        <div style="height:80vh;">
                <div id="demo-add-delete-event"></div>
    
    <div style="display: none">
    <div id="demo-add-popup">
        <div class="mbsc-form-group">
	        <label>
	        	분류
			    <input mbsc-input id="my-input" data-dropdown="true" />
			</label>
			<select id="my-select">
			    <option value="근무">근무</option>
			    <option value="연장">연장</option>
			    <option value="휴가">휴가</option>
			    <option value="외근">외근</option>
			    <option value="재택">재택</option>
			    <option value="출장">출장</option>
			</select>
            <label>
                제목
                <input mbsc-input id="event-title">
            </label>
            <label>
                메모
                <textarea mbsc-textarea id="event-desc"></textarea>
            </label>
        </div>
        <div class="mbsc-form-group">
            <label>
                하루종일
                <input mbsc-switch id="event-all-day" type="checkbox" />
            </label>
            <label>
                시작일
                <input mbsc-input id="start-input" />
            </label>
            <label>
                종료일
                <input mbsc-input id="end-input" />
            </label>
            <div id="event-date"></div>
            <div id="event-color-picker" class="event-color-c">
                <div class="event-color-label">색상</div>
                <div id="event-color-cont">
                    <div id="event-color" class="event-color"></div>
                </div>
            </div>
            <label>
                Show as busy
                <input id="event-status-busy" mbsc-segmented type="radio" name="event-status" value="busy">
            </label>
            <label>
                Show as free
                <input id="event-status-free" mbsc-segmented type="radio" name="event-status" value="free">
            </label>
            <div class="mbsc-button-group">
                <button class="mbsc-button-block" id="event-delete" mbsc-button data-color="danger" data-variant="outline">삭제</button>
            </div>
        </div>
    </div>
    
    <div id="demo-event-color">
        <div class="crud-color-row">
            <div class="crud-color-c" data-value="#ffeb3c">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#ffeb3c"></div>
            </div>
            <div class="crud-color-c" data-value="#ff9900">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#ff9900"></div>
            </div>
            <div class="crud-color-c" data-value="#f44437">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#f44437"></div>
            </div>
            <div class="crud-color-c" data-value="#ea1e63">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#ea1e63"></div>
            </div>
            <div class="crud-color-c" data-value="#9c26b0">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#9c26b0"></div>
            </div>
        </div>
        <div class="crud-color-row">
            <div class="crud-color-c" data-value="#3f51b5">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#3f51b5"></div>
            </div>
            <div class="crud-color-c" data-value="#5ac8fa">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#5ac8fa"></div>
            </div>
            <div class="crud-color-c" data-value="#009788">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#009788"></div>
            </div>
            <div class="crud-color-c" data-value="#4baf4f">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#4baf4f"></div>
            </div>
            <div class="crud-color-c" data-value="#7e5d4e">
                <div class="crud-color mbsc-icon mbsc-font-icon mbsc-icon-material-check" style="background:#7e5d4e"></div>
            </div>
        </div>
    </div>
    </div>
        </div>
    </div>

    <script>
    
    $(() => {
        workSelect();
    });
    
    const workInsert = () => {
    	// 넘길 data
    	let WkApVO = {
                wkCode: event.title,
                waArsn: event.description,
                waStime: event.start,
                waEtime: event.end,
                waType: event.color,
                waAllday: event.allDay
    	}
    	// Ajax
    	let xhr = new XMLHttpRequest();
    	xhr.open("post","/lhh/test"true);
    }
    
    const workSelect = function() {
        let xhr = new XMLHttpRequest();
        xhr.open("get", "/lhh/test", true);
        xhr.onreadystatechange = function() {
           if(xhr.readyState == 4 && xhr.status == 200) {
              console.log("근무일정 불러오기",xhr.responseText);
              let result = JSON.parse(xhr.responseText);
              let myData = [];
              
              for(let i=0; i<result.length; i++) {
                 let item = result[i];
                 let dataItem = {
                   	  no: item.waNo,
                      title: item.wkCode,
                      description: item.waArsn,
                      start: item.waStime,
                      end: item.waEtime,
                      allday: item.waAllday,
                      color: item.waType
                      }
                 myData.push(dataItem);
              };
              console.log("체크 : ", myData);
              calendar.addEvent(myData);
           }
          }
          xhr.send();
    };
    
        
    mobiscroll.setOptions({
        locale: mobiscroll.localeKo,                                  // Specify language like: locale: mobiscroll.localePl or omit setting to use default
        theme: 'ios',                                                 // Specify theme like: theme: 'ios' or omit setting to use default
        themeVariant: 'light'                                         // More info about themeVariant: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-themeVariant
    });
    
    var calendar,
        popup,
        range,
        oldEvent,
        tempEvent = {},
        deleteEvent,
        restoreEvent,
        colorPicker,
        tempColor,
        selectInput = document.getElementById('my-input'),
        titleInput = document.getElementById('event-title'),
        descriptionTextarea = document.getElementById('event-desc'),
        allDaySwitch = document.getElementById('event-all-day'),
        freeSegmented = document.getElementById('event-status-free'),
        busySegmented = document.getElementById('event-status-busy'),
        deleteButton = document.getElementById('event-delete'),
        colorSelect = document.getElementById('event-color-picker'),
        pickedColor = document.getElementById('event-color'),
        colorElms = document.querySelectorAll('.crud-color-c'),
        datePickerResponsive = {
            medium: {
                controls: ['calendar'],
                touchUi: false
            }
        },
        datetimePickerResponsive = {
            medium: {
                controls: ['calendar', 'time'],
                touchUi: false
            }
        }
    	/* ,
        myData = [{
            id: 1,
            start: '2023-09-07T13:00',
            end: '2023-09-07T15:00',
            title: 'Lunch @ Butcher\'s',
            description: '',
            allDay: false,
            free: true,
            resource: 1
        }
    ]; */

    var myResources = [{
        id: 1,
        name: '.',
        color: '#009788'
    }
    /* , {
        id: 2,
        name: 'Resource B',
        color: '#f44437'
    }
    */
];
    
    function createAddPopup(elm) {
        // hide delete button inside add popup
        deleteButton.style.display = 'none';
    
        deleteEvent = true;
        restoreEvent = false;
    
        // set popup header text and buttons for adding
        popup.setOptions({
            headerText: '근무 등록',                                  // More info about headerText: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-headerText
            buttons: [                                                // More info about buttons: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-buttons
                'cancel',
                {
                    text: '등록',
                    keyCode: 'enter',
                    handler: function () {
                        calendar.updateEvent(tempEvent);
                        deleteEvent = false;
                        // navigate the calendar to the correct view
                        calendar.navigateToEvent(tempEvent);
                        popup.close();
                    },
                    cssClass: 'mbsc-popup-button-primary'
                }
            ]
        });
    
        // fill popup with a new event data
        mobiscroll.getInst(selectInput).value = "선택";
        mobiscroll.getInst(titleInput).value = tempEvent.title;
        mobiscroll.getInst(descriptionTextarea).value = '';
        mobiscroll.getInst(allDaySwitch).checked = tempEvent.allDay;
        range.setVal([tempEvent.start, tempEvent.end]);
        mobiscroll.getInst(busySegmented).checked = true;
        range.setOptions({
            controls: tempEvent.allDay ? ['date'] : ['datetime'],
            responsive: tempEvent.allDay ? datePickerResponsive : datetimePickerResponsive
        });
        selectColor(getResource(tempEvent.resource).color, true);
    
        // set anchor for the popup
        popup.setOptions({ anchor: elm });
    
        popup.open();
    }
    
    function createEditPopup(args) {
        var ev = args.event;
    
        // show delete button inside edit popup
        deleteButton.style.display = 'block';
    
        deleteEvent = false;
        restoreEvent = true;
    
        // set popup header text and buttons for editing
        popup.setOptions({
            headerText: '상세정보',                                 // More info about headerText: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-headerText
            buttons: [                                                // More info about buttons: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-buttons
                'cancel',
                {
                    text: '등록',
                    keyCode: 'enter',
                    handler: function () {
                        var date = range.getVal();
                        var eventToSave = {
                            id: ev.id,
                            title: selectInput.value,
                            description: descriptionTextarea.value,
                            allDay: mobiscroll.getInst(allDaySwitch).checked,
                            start: date[0],
                            end: date[1],
                            free: mobiscroll.getInst(freeSegmented).checked,
                            color: ev.color,
                            resource: ev.resource
                        };
                        // update event with the new properties on save button click
                        calendar.updateEvent(eventToSave);
                        // navigate the calendar to the correct view
                        calendar.navigateToEvent(eventToSave);
                        restoreEvent = false;
                        popup.close();
                    },
                    cssClass: 'mbsc-popup-button-primary'
                }
            ]
        });
        
        // fill popup with the selected event data
        mobiscroll.getInst(titleInput).value = ev.title || '';
        mobiscroll.getInst(descriptionTextarea).value = ev.description || '';
        mobiscroll.getInst(allDaySwitch).checked = ev.allDay || false;
        range.setVal([ev.start, ev.end]);
        selectColor(ev.color || getResource(ev.resource).color, true);
    
        if (ev.free) {
            mobiscroll.getInst(freeSegmented).checked = true;
        } else {
            mobiscroll.getInst(busySegmented).checked = true;
        }
    
        // change range settings based on the allDay
        range.setOptions({
            controls: ev.allDay ? ['date'] : ['datetime'],
            responsive: ev.allDay ? datePickerResponsive : datetimePickerResponsive
        });
    
        // set anchor for the popup
        popup.setOptions({ anchor: args.domEvent.currentTarget });
        popup.open();
    }
    
    var formatDate = mobiscroll.util.datetime.formatDate;
    calendar = mobiscroll.eventcalendar('#demo-add-delete-event', {
        clickToCreate: 'double',                                      // More info about clickToCreate: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-clickToCreate
        dragToCreate: true,                                           // More info about dragToCreate: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-dragToCreate
        dragToMove: true,                                             // More info about dragToMove: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-dragToMove
        dragToResize: true,                                           // More info about dragToResize: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-dragToResize
        view: {                                                       // More info about view: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-view
            timeline: { 
                type: 'week',
                startDay : 1,
				endDay : 0,
                resolutionHorizontal : 'hour',
                resolutionVertical : 'day' 
           	}
        },
//         data: myData,                                                 // More info about data: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-data
        resources: myResources,       
        renderDay : function(day) {
            var date = day.date;
            var today = new Date(); // 현재 날짜

            var isToday = date.getDate() === today
            .getDate()
            && date.getMonth() === today
            .getMonth()
            && date.getFullYear() === today
            .getFullYear();

            // 오늘 날짜인 경우, <span class="dot dot-lg bg-success"></span> 추가
            var dotElement = isToday ? '<span class="dot dot-lg bg-success"></span>'
            : '';

            return '<div class=" mbsc-timeline-header-date-text mbsc-ios" style="padding: 30px 0; font-weight: bold;">'
                + '<div class=" mbsc-timeline-header-date-text mbsc-ios" style="text-align: center;"></div>'
                + '<div>'
                    + formatDate(
                    'M. DD (DDD) ',
                    date)
                    + dotElement
                    + '</div>' + '</div>';
            },
            renderScheduleEventContent : function(
            args) {
            return '<div class="md-timetable-event-title">'
                + args.title + '</div>';
            },
        onEventClick: function (args) {                               // More info about onEventClick: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#event-onEventClick
            oldEvent = Object.assign({}, args.event);
            tempEvent = args.event;
    
            if (!popup.isVisible()) {
                createEditPopup(args);
            }
        },
        onEventCreated: function (args) {                             // More info about onEventCreated: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#event-onEventCreated
            popup.close();
            // store temporary event
            tempEvent = args.event;
            createAddPopup(args.target);
        },
        onEventDeleted: function (args) {                             // More info about onEventDeleted: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#event-onEventDeleted
            mobiscroll.snackbar({ 
                button: {
                    action: function () {
                        calendar.addEvent(args.event);
                    },
                    text: 'Undo'
                },
                message: 'Event deleted'
            });
        }
        
    });
    
    popup = mobiscroll.popup('#demo-add-popup', {
        display: 'bottom',                                            // Specify display mode like: display: 'bottom' or omit setting to use default
        contentPadding: false,
        fullScreen: true,
        onClose: function () {                                        // More info about onClose: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#event-onClose
            if (deleteEvent) {
                calendar.removeEvent(tempEvent);
            } else if (restoreEvent) {
                calendar.updateEvent(oldEvent);
            }
        },
        responsive: {                                                 // More info about responsive: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-responsive
            medium: {
                display: 'anchored',                                  // Specify display mode like: display: 'bottom' or omit setting to use default
                width: 400,                                           // More info about width: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-width
                fullScreen: false,
                touchUi: false
            }
        }
    });
    
    titleInput.addEventListener('input', function (ev) {
        // update current event's title
        tempEvent.title = ev.target.value;
    });
    
    descriptionTextarea.addEventListener('change', function (ev) {
        // update current event's title
        tempEvent.description = ev.target.value;
    });
    
    allDaySwitch.addEventListener('change', function () {
        var checked = this.checked
        // change range settings based on the allDay
        range.setOptions({
            controls: checked ? ['date'] : ['datetime'],
            responsive: checked ? datePickerResponsive : datetimePickerResponsive
        });
    
        // update current event's allDay property
        tempEvent.allDay = checked;
    });
    
    range = mobiscroll.datepicker('#event-date', {
        controls: ['date'],
        select: 'range',
        startInput: '#start-input',
        endInput: '#end-input',
        showRangeLabels: false,
        touchUi: true,
        responsive: datePickerResponsive,                             // More info about responsive: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-responsive
        onChange: function (args) {
            var date = args.value;
            // update event's start date
            tempEvent.start = date[0];
            tempEvent.end = date[1];
        }
    });
    
    document.querySelectorAll('input[name=event-status]').forEach(function (elm) {
        elm.addEventListener('change', function () {
            // update current event's free property
            tempEvent.free = mobiscroll.getInst(freeSegmented).checked;
        });
    });

    deleteButton.addEventListener('click', function () {
        // delete current event on button click
        calendar.removeEvent(tempEvent);
        popup.close();
    
        // save a local reference to the deleted event
        var deletedEvent = tempEvent;
    
        mobiscroll.snackbar({ 
            button: {
                action: function () {
                    calendar.addEvent(deletedEvent);
                },
                text: 'Undo'
            },
            message: 'Event deleted'
        });
    });
    
    colorPicker = mobiscroll.popup('#demo-event-color', {
        display: 'bottom',                                            // Specify display mode like: display: 'bottom' or omit setting to use default
        contentPadding: false,
        showArrow: false,
        showOverlay: false,
        buttons: [
            'cancel',
            {
                text: 'Set',
                keyCode: 'enter',
                handler: function (ev) {
                    setSelectedColor();
                },
                cssClass: 'mbsc-popup-button-primary'
            }
        ],
        responsive: {                                                 // More info about responsive: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-responsive
            medium: {
                display: 'anchored',                                  // Specify display mode like: display: 'bottom' or omit setting to use default
                anchor: document.getElementById('event-color-cont'),  // More info about anchor: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-anchor
                buttons: [],                                          // More info about buttons: https://docs.mobiscroll.com/5-26-2/javascript/eventcalendar#opt-buttons
            }
        }
    });
    
    function selectColor(color, setColor) {
        var selectedElm = document.querySelector('.crud-color-c.selected');
        var newSelected = document.querySelector('.crud-color-c[data-value="' + color + '"]');
    
        if (selectedElm) {
            selectedElm.classList.remove('selected')
        }
        if (newSelected) {
            newSelected.classList.add('selected')
        }
        if (setColor) {
            pickedColor.style.background = color;
        }
    }
    
    function setSelectedColor() {
        tempEvent.color = tempColor;
        pickedColor.style.background = tempColor;
        colorPicker.close();
    }
    
    function getResource(res) {
        return myResources.find(function (r) { return r.id == res })
    }
    
    colorSelect.addEventListener('click', function () {
        selectColor(tempEvent.color || getResource(tempEvent.resource).color);
        colorPicker.open();
    });
    
    colorElms.forEach(function (elm) {
        elm.addEventListener('click', function () {
            tempColor = elm.getAttribute('data-value');
            selectColor(tempColor);
    
            if (!colorPicker.s.buttons.length) {
                setSelectedColor();
            }
        });
        
        mobiscroll.select('#my-select', {
            inputElement: document.getElementById('my-input'),
            touchUi: false
        });
    });
		</script>
</body>
<script>
// // 오늘 버튼
// document.querySelector('.today').addEventListener('click', function(){
//  var botton = document.querySelector('.mbsc-calendar-button-today');
//  if (botton) {
//      botton.click();
//  }
// })
// // pagenation next
// document.querySelector('.next').addEventListener('click', function(){
//  var botton = document.querySelector('.mbsc-calendar-button-next');
//  if (botton) {
//      botton.click();
//  }
// })

// // pagenation previous
// document.querySelector('.pre').addEventListener('click', function() {
//  var buttonToClick = document.querySelector('.mbsc-calendar-button-prev');
//  if (buttonToClick) {
//      buttonToClick.click(); // 특정 버튼 클릭
//  }
// });
// // date botton
// document.querySelector('.date').addEventListener('click', function() {
//  var divButton = document.querySelector('.mbsc-calendar-button');
//  if (divButton) {
//      divButton.click(); // 버튼 클릭
//  }
// });

</script>
</html>